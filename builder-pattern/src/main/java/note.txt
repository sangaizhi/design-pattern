一、建造者模式：
    也叫生成器模式：将一个复杂对象的构建与它的表示分离，是的同样的构建过程可以创建不同的表示

二、建造者模式的理解
    通用类图：见 建造者模式类图.
    在建造者模式中，有如下四个角色：
        Product 产品类：
            通常是实现了模板方法模式，也就是有模板方法和基本方法。本示例中的 BenzCarModel 和 BmwCarModel 就属于产品类
        Builder 抽象建造者
            规范产品的组件，一般有子类实现，本示例中的 CarBuilder 就是抽象建造者
        ConcreteBuilder 具体建造者
            实现抽象建造者者定义的所有方法，并且返回一个组建好的对象。本示例中的 BenzBuilder 和 BmwBuilder 就是具体建造者
        Director 导演类
            负责安排已有模块的顺序，然后告诉 builder 开始建造。

三、建造者子模式的优缺点
    优点：
        封装性：使用建造者模式可以是客户端不必知道产品内部组成的细节
        建造者独立，可以扩展。BenzBuilder 和 BmwBuilder 是相互独立的。
        便于控制细节风险，由于具体的建造者是独立的，因此可以对建造过程逐步细化，而不对其他的模块产生任何影响。

四、使用场景
    相同的方法，不同的执行顺序，产生不同的事件结果时，可以采用建造者模式。
    多个部件或零件，都可以装配到一个对象中，但产生的运行结果又不相同时，可以采用建造者模式。
    产品类非常复杂，或者产品类中的调用顺序不同产生不同的效能，可以采用建造者模式。

五、注意事项:
    建造者模式关注的是零件类型和装配工艺（顺序）,这是它与工厂方法模式最大的不同。
    建造者模式要表达的核心就是产品的组装，组装顺序不同，就会产生不同效能。
