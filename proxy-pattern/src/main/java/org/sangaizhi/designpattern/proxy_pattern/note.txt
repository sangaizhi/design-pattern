一、代理模式：
    为其他对象提供一种代理以控制这个对象的访问。


普通代理：
    普通代理就是我们要知道代理的存在，也就是要知道 GamePlayerProxy 的存在，然后才能访问。
    要求客户端只能访问代理角色，不能访问真实角色，屏蔽了真实角色的变更对高层模块的影响。
强制代理：
    比较另类，一般的思维都是通过代理找到真实的角色，当时强制代理却是要“强制”, 你必须通过真实角色查找到代理角色，否则不能访问。
    就是要从真实角色查找到代理角色，不允许直接访问真实角色，高层模块只要通过代理就能访问真实角色的所有方法。
动态代理:
    动态代理是在实现阶段不必关心代理谁，而在运行阶段才能确定代理哪一个对象。 Spring AOP 也是采用动态代理机制.
    要实现动态代理的手摇条件是：被代理类必须实现一个接口，