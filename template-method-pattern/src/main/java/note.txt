一、模板方法模式：
    定义一个操作中的算法的框架，而将一些步骤延迟到子类中。使得子类可以不改变一个算法的结构即可重新定义一个算法的特定步骤

    抽象模板中的方法分为两类：
        基本方法：也叫基本操作，是由子类实现的方法，并且在模板方法中调用。
        模板方法：可以有一个或几个，一般是一个具体的方法，也就是一个框架，实现对基本方法的调度，完成固定的逻辑。
                  为了防止恶意操作，一般模板方法都加上 final 关键字，不允许重写。

二、模板方法的优缺点：
    优点：
        封装不可变部分，扩展可变部分：
            把认为是不可变部分的算法封装到父类实现，而可变部分的则可以通过继承来扩展。
        提取公共部分代码，便于维护：
        行为有父类控制。子类实现：基本方法是有子类实现的，因此子类可以通过扩展的方法增加相应的功能，符合开闭原则。
    缺点：
        颠倒了设计习惯，一般抽象类负责声明最抽象、最一般的事物属性和方法，实现类完成具体的事物属性和方法；但模板方法却颠倒了，
        抽象类定义了部分抽象方法，由子类实现，子类执行的结果影响了父类的结果，也就是子类岁父类产生了影响。

三、使用场景
    多个子类公有的方法，并且逻辑基本相同时。
    重要、复杂的算法，可以把核心算法设计为模板方法，周边的相关细节功能则由各个子类实现。
    重构时，模板方法模式是一个经常使用的模式，把相同的代码抽取到父类中，然后通过钩子函数约束其行为。
